#define HOST_OS 1

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "zmk-helpers/helper.h"
#include "zmk-helpers/unicode-chars/french.dtsi"
#include "zmk-helpers/unicode-chars/currency.dtsi"
#include "helper.h"

// Credits : https://github.com/toniz4/zmk-config
AC_KEY(A_acute, A, SQT)
AC_KEY(A_grave, A, GRAVE)
AC_KEY(A_diac, A, DQT)
AC_KEY(A_circ,  A, LS(N6))

AC_KEY(E_acute, E, SQT)
AC_KEY(E_grave, E, GRAVE)
AC_KEY(E_diac, E, DQT)
AC_KEY(E_circ,  E, LS(N6))

AC_KEY(I_diac, I, DQT)
AC_KEY(I_circ,  I, LS(N6))

AC_KEY(O_acute, O, SQT)
AC_KEY(O_diac, O, DQT)
AC_KEY(O_circ,  O, LS(N6))

AC_KEY(U_grave, U, GRAVE)
AC_KEY(U_circ,  U, LS(N6))

UNDEAD_KEY(squo, SQT)
UNDEAD_KEY(dquo, DQT)
UNDEAD_KEY(grave, GRAVE)

ZMK_UNICODE_PAIR(fr_ae,             N0, N0, E, N6,   N0, N0, C, N6)  // æ/Æ
ZMK_UNICODE_PAIR(fr_oe,             N0, N1, N5, N3,  N0, N1, N5, N2) // œ/Œ
ZMK_UNICODE_PAIR(fr_c_cedilla,      N0, N0, E, N7,   N0, N0, C, N7)  // ç/Ç

&lt {
    tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
};

/ {
    macros {
        // Triple grave macro (M_TRIPLEGRV)

        triple_grave: triple_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&grave &grave &grave>;
        };

        php_this: php_this {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOLLAR &kp T &kp H &kp I &kp S>;
        };

        php_arrow: php_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GREATER_THAN>;
        };

    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

    };

    combos {
        compatible = "zmk,combos";
        capsw {
            bindings = <&caps_word>;
            key-positions = <10 19>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&kp Q        &kp W               &kp E           &kp R    &kp T             &kp Y  &kp U    &kp I               &kp O                  &kp P
&hm LSHFT A  &lt 1 S             &lt 3 D         &lt 5 F  &kp G             &kp H  &lt 8 J  &lt 4 K             &lt 7 L                &hm RIGHT_SHIFT SEMICOLON
&kp Z        &hm LEFT_CONTROL X  &hm LEFT_ALT C  &kp V    &kp B             &kp N  &kp M    &hm LEFT_ALT COMMA  &hm RIGHT_CONTROL DOT  &kp SLASH
                                &kp N0       &lt 4 BACKSPACE                &lt 2 SPACE            &lt 6 N1
            >;
        };

        functions {
            bindings = <
&trans  &trans  &trans        &trans  &trans    &trans &kp F7  &kp F8  &kp F9  &kp F10
&trans  &none   &kp LC(LALT)  &trans  &trans    &trans &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans  &trans        &trans  &trans    &trans &kp F1  &kp F2  &kp F3  &kp F12
&trans  &trans                                                          &trans   &trans
            >;
        };

        specials {
            bindings = <
&kp ESC  &trans  &curr_euro  &trans     &trans    &trans  &trans  &trans  &trans  &kp DEL
&trans   &trans  &kp DOLLAR  &kp ENTER  &trans    &trans &kp LGUI &trans  &trans  &trans
&trans   &trans  &trans      &trans     &trans    &trans  &trans  &trans  &trans  &bootloader
&none  &kp TAB                                                           &none   &trans
            >;
        };

media {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOL_UP
&trans  &trans  &none   &trans  &trans    &trans  &trans  &trans  &trans  &kp C_MUTE
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp C_VOL_DN
&trans  &bt BT_CLR                                                    &trans  &trans
            >;
        };

        nav {
            bindings = <
&kp ESC  &kp PG_UP  &kp UP    &kp PG_DN  &trans    &trans  &trans    &trans  &trans        &trans
&trans   &kp LEFT   &kp DOWN  &kp RIGHT  &trans    &trans  &kp LGUI  &none   &kp LC(LALT)  &kp LC(LA(LSHFT))
&trans   &kp HOME   &trans    &kp END    &trans    &trans  &trans    &trans  &trans        &trans
&kp TAB  &none                                                               &trans        &trans
            >;
        };

        accents {
            bindings = <
&trans     &trans     &trans    &trans  &trans    &kp AMPS    &kp UNDER  &kp PIPE  &squo   &trans
&kp CARET  &kp ASTRK  &trans    &none   &trans    &kp HASH  &kp TILDE  &kp FSLH  &dquo   &kp DLLR
&trans     &trans     &trans    &trans  &trans    &trans    &kp MINUS  &kp BSLH  &grave  &triple_grave
                    &trans     &trans                     &trans  &trans
            >;
        };

        french_layer {
            bindings = <
&trans  &E_grave &E_circ &E_acute &trans    &trans  &U_grave &I_diac &O_circ &O_diac
&A_circ &fr_ae &E_diac &trans &trans               &U_circ &trans &trans &fr_oe &trans
&A_grave &trans &fr_c_cedilla &trans &trans              &trans &trans &trans &trans &trans
&trans          &trans                 &trans          &none
            >;
        };

        numbers {
            bindings = <
&kp SLASH  &kp N7    &kp N8  &kp N9  &kp PLUS     &none  &none  &none  &none      &none
&kp STAR   &kp N4    &kp N5  &kp N6  &kp MINUS    &none  &none  &none  &none      &trans
&none     &kp N1    &kp N2  &kp N3  &kp EQUAL    &none  &none  &none  &none      &none
&kp N0      &kp DOT                                                  &kp ENTER  &none
            >;
        };

        symbols {
            bindings = <
&trans          &kp COLON        &kp LESS_THAN         &kp GREATER_THAN       &php_this        &trans  &trans  &trans  &trans     &trans
&kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &php_arrow       &trans  &none   &trans  &trans     &trans
&kp DOT         &none            &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none            &trans  &trans  &trans  &trans     &trans
&none           &trans                                                                         &kp ENTER  &trans
            >;
        };
    };
};
